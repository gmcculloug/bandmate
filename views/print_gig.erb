<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= @gig.name %> - Gig</title>
    <style>
        :root {
            --font-size-multiplier: 1;
        }

        body.font-small {
            --font-size-multiplier: 0.8;
        }

        body.font-medium {
            --font-size-multiplier: 1;
        }

        body.font-large {
            --font-size-multiplier: 1.2;
        }

        body.layout-portrait {
            --page-orientation: portrait;
        }

        body.layout-landscape {
            --page-orientation: landscape;
        }

        body.hide-song-keys .song-key {
            display: none;
        }

        @media print {
            @page {
                margin: 0.5in 0.25in;
            }

            /* Default portrait orientation */
            body.layout-portrait {
                /* Portrait styles */
            }

            body.layout-portrait @page {
                size: letter portrait;
            }

            /* Landscape orientation */
            body.layout-landscape {
                /* Landscape-specific layout optimizations */
            }

            body.layout-landscape @page {
                size: letter landscape;
                margin: 0.25in 0.5in; /* Swap margins for landscape */
            }

            /* Alternative landscape approach for better browser compatibility */
            @page landscape {
                size: letter landscape;
                margin: 0.25in 0.5in;
            }

            body.layout-landscape .set-row {
                /* Optimize set layout for landscape */
                display: flex;
                flex-direction: row;
                gap: 30px;
            }

            body.layout-landscape .set-column {
                /* Better column distribution in landscape */
                flex: 1;
                min-width: 0;
                max-width: 50%;
            }

            .controls {
                display: none !important;
            }
        }
        
        body {
            font-family: 'Times New Roman', serif;
            line-height: 1.4;
            color: #000;
            background: white;
            margin: 0;
            padding: 10px;
        }
        
        
        .song-list {
            margin-top: 0px;
        }

        .set-row {
            display: flex;
            gap: 20px;
            margin-bottom: 10px;
            page-break-inside: avoid;
        }

        .set-column {
            flex: 1;
            min-width: 0;
        }

        .page-break {
            page-break-before: always;
        }
        
        .song-item {
            display: flex;
            align-items: center;
            margin-bottom: 2px;
            page-break-inside: avoid;
            flex-wrap: wrap;
            gap: 10px;
        }
        
        .song-info {
            flex: 1;
            display: flex;
            align-items: center;
            gap: 10px;
            flex-wrap: wrap;
            min-width: 0;
        }
        
        .song-title-and-notes {
            display: flex;
            flex-direction: column;
            gap: 0;
            flex: 1;
            min-width: 0;
        }

        .song-title {
            font-size: calc(1.2rem * var(--font-size-multiplier));
            font-weight: bold;
            word-break: break-word;
        }
        
        .song-artist {
            font-size: calc(1rem * var(--font-size-multiplier));
            color: #666;
            word-break: break-word;
        }
        
        .song-key {
            font-size: calc(1rem * var(--font-size-multiplier));
            color: #666;
            font-weight: bold;
            flex-shrink: 0;
        }

        .song-notes {
            font-size: calc(0.9rem * var(--font-size-multiplier));
            color: #555;
            font-style: italic;
            margin-top: 0;
            margin-bottom: 0;
            padding: 0;
            line-height: 1.0 !important;
            word-break: break-word;
        }

        
        .summary {
            margin-top: 5px;
            padding-top: 8px;
            border-top: 1px solid #000;
        }
        
        .summary h3 {
            font-size: calc(1.3rem * var(--font-size-multiplier));
            margin-bottom: 8px;
        }

        .summary-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 10px;
        }

        .summary-item {
            font-size: calc(1rem * var(--font-size-multiplier));
        }
        
        .summary-label {
            font-weight: bold;
        }
        
        .notes {
            margin-top: 15px;
            padding: 10px;
            border: 1px solid #ccc;
            background: #f9f9f9;
        }
        
        .notes h4 {
            margin-top: 0;
            margin-bottom: 5px;
        }
        
        @media screen {
            body {
                max-width: 800px;
                margin: 0 auto;
                padding: 20px;
            }
            
            .controls {
                position: fixed;
                top: 20px;
                right: 20px;
                display: flex;
                flex-direction: column;
                gap: 8px;
                z-index: 1000;
                max-width: 180px;
            }

            .print-button {
                background: #007bff;
                color: white;
                border: none;
                padding: 8px 12px;
                border-radius: 6px;
                cursor: pointer;
                font-size: 14px;
                width: 100%;
                box-shadow: 0 2px 8px rgba(0,0,0,0.15);
                display: flex;
                align-items: center;
                justify-content: center;
            }

            .print-button:hover {
                background: #0056b3;
            }

            .font-size-control {
                background: white;
                padding: 6px;
                border-radius: 6px;
                box-shadow: 0 2px 8px rgba(0,0,0,0.15);
                border: 1px solid #ddd;
                width: 100%;
            }

            .font-size-control label {
                display: block;
                margin-bottom: 3px;
                font-size: 12px;
                font-weight: bold;
                color: #333;
            }

            .font-size-control select {
                width: 100%;
                padding: 4px;
                border: 1px solid #ddd;
                border-radius: 3px;
                font-size: 12px;
                background: #fff;
            }
        }
        
        /* Mobile-specific styles */
        @media screen and (max-width: 768px) {
            body {
                padding: 15px;
            }

            .header h1 {
                font-size: 2rem;
            }

            .set-row {
                flex-direction: column;
                gap: 20px;
            }

            .song-item {
                flex-direction: column;
                align-items: flex-start;
                gap: 5px;
            }

            .song-info {
                flex-direction: column;
                align-items: flex-start;
                gap: 5px;
                width: 100%;
            }

            .song-title {
                font-size: 1.2rem;
            }

            .song-key {
                font-size: 1rem;
            }

            .summary-grid {
                grid-template-columns: 1fr;
            }

            .controls {
                top: 10px;
                right: 10px;
                max-width: 150px;
            }

            .print-button {
                padding: 6px 10px;
                font-size: 12px;
            }

            .font-size-control {
                padding: 4px;
            }

            .font-size-control label {
                font-size: 10px;
                margin-bottom: 2px;
            }

            .font-size-control select {
                padding: 3px;
                font-size: 10px;
            }
        }
        
        /* Small mobile devices */
        @media screen and (max-width: 480px) {
            body {
                padding: 10px;
            }
            
            .header h1 {
                font-size: 1.8rem;
            }
            
            .song-title {
                font-size: 1.1rem;
            }
            
            .controls {
                top: 5px;
                right: 5px;
                max-width: 140px;
            }

            .print-button {
                padding: 5px 8px;
                font-size: 11px;
            }

            .font-size-control {
                padding: 3px;
            }

            .font-size-control label {
                font-size: 9px;
                margin-bottom: 1px;
            }

            .font-size-control select {
                padding: 2px;
                font-size: 9px;
            }
        }
    </style>
    <script>
        function changeFontSize(size) {
            const body = document.body;
            body.className = body.className.replace(/font-(small|medium|large)/g, '');
            body.classList.add('font-' + size);
        }

        function changeLayout(layout) {
            const body = document.body;
            body.className = body.className.replace(/layout-(portrait|landscape)/g, '');
            body.classList.add('layout-' + layout);
        }

        function toggleSongKeys(show) {
            const body = document.body;
            if (show === 'show') {
                body.classList.remove('hide-song-keys');
            } else {
                body.classList.add('hide-song-keys');
            }
        }

        // Simple print function
        function printPage() {
            window.print();
        }

        // Set initial settings
        document.addEventListener('DOMContentLoaded', function() {
            changeFontSize('large');
            changeLayout('portrait');
            toggleSongKeys('show');
        });
    </script>
</head>
<body class="font-large layout-portrait">
    <div class="controls">
        <button class="print-button" onclick="printPage()">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="margin-right: 6px;">
                <polyline points="6,9 6,2 18,2 18,9"></polyline>
                <path d="M6,18H4a2,2 0,0,1-2-2V11a2,2 0,0,1,2-2H20a2,2 0,0,1,2,2v5a2,2 0,0,1-2,2H18"></path>
                <polyline points="6,14 18,14 18,20 6,20 6,14"></polyline>
            </svg>
            Print
        </button>
        <div class="font-size-control">
            <label for="font-size-selector">Font Size:</label>
            <select id="font-size-selector" onchange="changeFontSize(this.value)">
                <option value="small">Small</option>
                <option value="medium">Medium</option>
                <option value="large" selected>Large</option>
            </select>
        </div>
        <div class="font-size-control">
            <label for="layout-selector">Layout:</label>
            <select id="layout-selector" onchange="changeLayout(this.value)">
                <option value="portrait" selected>Portrait</option>
                <option value="landscape">Landscape</option>
            </select>
        </div>
        <div class="font-size-control">
            <label for="song-keys-selector">Song Keys:</label>
            <select id="song-keys-selector" onchange="toggleSongKeys(this.value)">
                <option value="show" selected>Show</option>
                <option value="hide">Hide</option>
            </select>
        </div>
    </div>
    

    <div class="song-list">
        <% if @gig.songs.any? %>
            <% 
              gig_songs_by_set = @gig.gig_songs.includes(:song).order(:set_number, :position).group_by(&:set_number)
              max_set = gig_songs_by_set.keys.max || 1
            %>
            
            <%
              # Find the first set that actually exists
              first_existing_set = (1..max_set).find { |s| gig_songs_by_set[s] }
              sets_processed = 0
            %>
            <% (1..max_set).step(2).each do |set_number| %>
              <% if gig_songs_by_set[set_number] || gig_songs_by_set[set_number + 1] %>
                <% if sets_processed > 0 %>
                  <div class="page-break"></div>
                <% end %>
                <% sets_processed += 1 %>

              <div class="set-row">
                <% [set_number, set_number + 1].each do |current_set| %>
                  <% if current_set <= max_set && gig_songs_by_set[current_set] %>
                    <div class="set-column">
                      <div class="set-section" style="margin-bottom: 20px;">
                        <h2 style="font-size: calc(1.2rem * var(--font-size-multiplier)); margin-bottom: 8px; border-bottom: 2px solid #333; padding-bottom: 6px;">
                          Set <%= current_set %>
                          <span style="font-size: calc(0.9rem * var(--font-size-multiplier)); color: #666; font-weight: normal;">
                            <%
                              set_songs = gig_songs_by_set[current_set]
                              total_set_minutes = set_songs.sum do |gs|
                                if gs.song.duration.present? && gs.song.duration.match?(/^\d+:\d+$/)
                                  parts = gs.song.duration.split(':').map(&:to_i)
                                  parts[0] + parts[1]/60.0
                                else
                                  0
                                end
                              end

                              if total_set_minutes > 0
                                hours = (total_set_minutes / 60).to_i
                                minutes = (total_set_minutes % 60).round

                                if hours > 0
                                  set_time_display = " • #{hours}h #{minutes}m"
                                else
                                  set_time_display = " • #{minutes}m"
                                end
                              else
                                set_time_display = ""
                              end
                            %>
                            (<%= set_songs.count %> songs<%= set_time_display %>)
                          </span>
                        </h2>

                        <% gig_songs_by_set[current_set].each_with_index do |gig_song, index| %>
                          <div class="song-item">
                            <div class="song-info">
                              <div class="song-title-and-notes">
                                <div class="song-title">
                                  <%= gig_song.song.title %>
                                </div>
                                <% if gig_song.song.notes.present? %>
                                  <div class="song-notes">
                                    <%= gig_song.song.notes %>
                                  </div>
                                <% end %>
                              </div>
                              <div class="song-key">(<%= gig_song.song.key %>)</div>
                            </div>
                          </div>
                        <% end %>
                      </div>
                    </div>
                  <% elsif current_set <= max_set %>
                    <div class="set-column">
                      <!-- Empty column for sets that don't exist -->
                    </div>
                  <% end %>
                <% end %>
              </div>
              <% end %>
            <% end %>
        <% else %>
            <p style="text-align: center; font-style: italic; color: #666;">No songs in this set list</p>
        <% end %>
    </div>

    <% if @gig.songs.any? %>
        <div class="summary">
            <div class="summary-grid">
                <div class="summary-item">
                    <span class="summary-label">Total Songs:</span> <%= @gig.songs.count %>
                </div>
                <div class="summary-item">
                    <span class="summary-label">Estimated Duration:</span> 
                    <%
                      total_minutes = @gig.songs.sum do |s|
                        if s.duration.present? && s.duration.match?(/^\d+:\d+$/)
                          parts = s.duration.split(':').map(&:to_i)
                          parts[0] + parts[1]/60.0
                        else
                          0
                        end
                      end

                      if total_minutes > 0
                        hours = (total_minutes / 60).to_i
                        minutes = (total_minutes % 60).round

                        if hours > 0
                          formatted_total = "#{hours}h #{minutes}m"
                        else
                          formatted_total = "#{minutes}m"
                        end
                      else
                        formatted_total = 'N/A'
                      end
                    %>
                    <%= formatted_total %>
                </div>

            </div>
        </div>
    <% end %>
</body>
</html> 